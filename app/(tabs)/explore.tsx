import React, { useState } from "react";
import {
  StyleSheet,
  View,
  Text,
  FlatList,
  Image,
  TouchableOpacity,
  ScrollView,
  TextInput,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";

// Define product type
interface Product {
  id: string;
  name: string;
  price: string;
  image: string;
  category: string;
}

// Define store type
interface Store {
  id: string;
  name: string;
  address: string;
  category: string;
  contact: string;
}

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
const PRODUCTS: Product[] = [
  {
    id: "1",
    name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ A",
    price: "‡∏ø350",
    image: "https://placekitten.com/200/200",
    category: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°",
  },
  {
    id: "2",
    name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ B",
    price: "‡∏ø580",
    image: "https://placekitten.com/201/201",
    category: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°",
  },
  {
    id: "3",
    name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ C",
    price: "‡∏ø220",
    image: "https://placekitten.com/202/202",
    category: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
  },
  {
    id: "4",
    name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ D",
    price: "‡∏ø490",
    image: "https://placekitten.com/203/203",
    category: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
  },
  {
    id: "5",
    name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ E",
    price: "‡∏ø750",
    image: "https://placekitten.com/204/204",
    category: "‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ",
  },
  {
    id: "6",
    name: "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ F",
    price: "‡∏ø300",
    image: "https://placekitten.com/205/205",
    category: "‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ",
  },
];

// Sample store data
const STORES: Store[] = [
  {
    id: "1",
    name: "‡∏£‡πâ‡∏≤‡∏ô A",
    address: "123 ‡∏ñ‡∏ô‡∏ô‡∏´‡∏•‡∏±‡∏Å, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø",
    category: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
    contact: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: 012-345-6789",
  },
  {
    id: "2",
    name: "‡∏£‡πâ‡∏≤‡∏ô B",
    address: "456 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏≠‡∏á, ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø",
    category: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°",
    contact: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: 987-654-3210",
  },
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
];

export default function ExploreScreen() {
  const [searchQuery, setSearchQuery] = useState("");

  const filteredStores = STORES.filter((store) =>
    store.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const renderProductItem = ({ item }: { item: Product }) => (
    <TouchableOpacity style={styles.productItem}>
      <Image source={{ uri: item.image }} style={styles.productImage} />
      <View style={styles.productInfo}>
        <Text style={styles.category}>{item.category}</Text>
        <Text style={styles.productName}>{item.name}</Text>
        <Text style={styles.productPrice}>{item.price}</Text>
      </View>
      <TouchableOpacity style={styles.addButton}>
        <Text style={styles.addButtonText}>+ ‡πÄ‡∏û‡∏¥‡πà‡∏°</Text>
      </TouchableOpacity>
    </TouchableOpacity>
  );

  const renderStoreItem = ({ item }: { item: Store }) => (
    <TouchableOpacity style={styles.storeItem}>
      <Text style={styles.storeName}>{item.name}</Text>
      <Text style={styles.storeAddress}>{item.address}</Text>
      <Text style={styles.storeCategory}>{item.category}</Text>
      <Text style={styles.storeContact}>{item.contact}</Text>
      <TouchableOpacity style={styles.addButton}>
        <Text style={styles.addButtonText}>‡πÄ‡∏û‡∏¥‡πà‡∏°</Text>
      </TouchableOpacity>
    </TouchableOpacity>
  );

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.header}>
        <View style={styles.headerContent}>
          <Text style={styles.headerIcon}>üöõ</Text>
          <Text style={styles.headerTitle}>THANGSISUK</Text>
        </View>
        <View style={styles.headerIcons}>
          <Text style={styles.iconButton}>üìç</Text>
          <Text style={styles.iconButton}>üí¨</Text>
        </View>
      </View>

      <View style={styles.categories}>
        <ScrollView horizontal showsHorizontalScrollIndicator={false}>
          <TouchableOpacity
            style={[styles.categoryButton, styles.categoryActive]}
          >
            <Text style={styles.categoryActiveText}>‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.categoryButton}>
            <Text style={styles.categoryText}>‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.categoryButton}>
            <Text style={styles.categoryText}>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.categoryButton}>
            <Text style={styles.categoryText}>‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.categoryButton}>
            <Text style={styles.categoryText}>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏≠‡∏≤‡∏á</Text>
          </TouchableOpacity>
        </ScrollView>
      </View>

      <TextInput
        style={styles.searchInput}
        placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤..."
        value={searchQuery}
        onChangeText={setSearchQuery}
      />

      <FlatList
        data={filteredStores}
        renderItem={renderStoreItem}
        keyExtractor={(item) => item.id}
        contentContainerStyle={styles.storeList}
      />
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f8f8f8",
  },
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    backgroundColor: "#c4ff36", // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û
    paddingVertical: 10,
    paddingHorizontal: 15,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: "bold",
  },
  searchIcon: {
    fontSize: 24,
  },
  categories: {
    backgroundColor: "white",
    paddingVertical: 10,
    marginBottom: 10,
  },
  ScrollView: {
    flexDirection: "row",
  },
  categoryButton: {
    paddingHorizontal: 15,
    paddingVertical: 8,
    marginHorizontal: 5,
    borderRadius: 20,
  },
  categoryActive: {
    backgroundColor: "#007BFF",
  },
  categoryText: {
    color: "#666",
    fontSize: 14,
  },
  categoryActiveText: {
    color: "white",
    fontSize: 14,
    fontWeight: "bold",
  },
  productList: {
    padding: 10,
  },
  productItem: {
    flex: 1,
    backgroundColor: "white",
    borderRadius: 10,
    margin: 5,
    padding: 10,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 1,
  },
  productImage: {
    width: "100%",
    height: 120,
    borderRadius: 5,
    marginBottom: 8,
  },
  productInfo: {
    marginBottom: 10,
  },
  category: {
    fontSize: 12,
    color: "#666",
    marginBottom: 2,
  },
  productName: {
    fontSize: 14,
    fontWeight: "bold",
    marginBottom: 4,
  },
  productPrice: {
    fontSize: 14,
    color: "#007BFF",
    fontWeight: "bold",
  },
  addButton: {
    backgroundColor: "#007BFF",
    borderRadius: 5,
    paddingVertical: 5,
    alignItems: "center",
  },
  addButtonText: {
    color: "white",
    fontWeight: "bold",
    fontSize: 14,
  },
  searchInput: {
    height: 50,
    borderWidth: 1,
    borderColor: "#ddd",
    borderRadius: 8,
    marginBottom: 20,
    paddingHorizontal: 15,
    fontSize: 16,
  },
  storeList: {
    paddingBottom: 20,
  },
  storeItem: {
    backgroundColor: "#f8f8f8",
    borderRadius: 10,
    padding: 15,
    marginBottom: 10,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    elevation: 1,
  },
  storeName: {
    fontSize: 18,
    fontWeight: "bold",
  },
  storeAddress: {
    fontSize: 14,
    color: "#666",
  },
  storeCategory: {
    fontSize: 14,
    color: "#007BFF",
  },
  storeContact: {
    fontSize: 14,
    color: "#666",
  },
  iconButton: {
    fontSize: 24,
    marginLeft: 15,
  },
  headerIcon: {
    fontSize: 24,
    marginRight: 10,
  },
  headerIcons: {
    flexDirection: "row",
  },
  headerContent: {
    flexDirection: "row",
    alignItems: "center",
  },
});
